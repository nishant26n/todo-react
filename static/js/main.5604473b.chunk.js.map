{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","className","value","onChange","e","target","placeholder","type","onClick","preventDefault","Text","completed","id","Math","random","name","Todo","text","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5604473b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n  const inputTextHandler = (e) => {\n    // console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n\n  const submitTodosHandler = (e) => {\n    e.preventDefault();\n    if (inputText === \"\") {\n      setInputText(\"\");\n    } else {\n      setTodos([\n        ...todos,\n        { Text: inputText, completed: false, id: Math.random() * 1000 },\n      ]);\n      setInputText(\"\");\n    }\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <form>\n      <div className=\"input-container\">\n        <input\n          value={inputText}\n          onChange={inputTextHandler}\n          placeholder=\"add a todo to get started\"\n          type=\"text\"\n          className=\"todo-input\"\n        />\n        <button\n          onClick={submitTodosHandler}\n          className=\"todo-button\"\n          type=\"submit\"\n        >\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n      </div>\n\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Todo = ({ text, setTodos, todo, todos }) => {\n  //Events\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n        {text}\n      </li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ setTodos, todos, filteredTodos }) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            setTodos={setTodos}\n            todos={todos}\n            todo={todo}\n            text={todo.Text}\n            key={todo.id}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //State\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //Run only once when app start\n  useEffect(() => {\n    const getLocalTodos = () => {\n      if (localStorage.getItem(\"todos\") === null) {\n        localStorage.setItem(\"todos\", JSON.stringify([]));\n      } else {\n        let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n        setTodos(todoLocal);\n      }\n    };\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    //function\n    const filterHandler = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    filterHandler();\n\n    //Local storage\n    const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n    saveLocalTodos();\n  }, [todos, status]);\n\n  return (\n    <div className=\"App\">\n      <header>Todo</header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        setTodos={setTodos}\n        todos={todos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}